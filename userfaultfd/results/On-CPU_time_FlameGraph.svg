<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>lru_cache_add_inactive_or_unevictable (1,750,000 samples, 0.37%)</title><rect x="331.0" y="245" width="4.4" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="334.02" y="255.5" ></text>
</g>
<g >
<title>remove_wait_queue (250,000 samples, 0.05%)</title><rect x="1156.8" y="261" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1159.77" y="271.5" ></text>
</g>
<g >
<title>do_el0_svc (250,000 samples, 0.05%)</title><rect x="176.8" y="309" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="179.78" y="319.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (250,000 samples, 0.05%)</title><rect x="176.8" y="341" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="179.78" y="351.5" ></text>
</g>
<g >
<title>thread_start (397,750,000 samples, 84.54%)</title><rect x="192.5" y="469" width="997.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.45" y="479.5" >thread_start</text>
</g>
<g >
<title>__folio_alloc (292,500,000 samples, 62.17%)</title><rect x="344.2" y="245" width="733.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="347.19" y="255.5" >__folio_alloc</text>
</g>
<g >
<title>security_file_ioctl (1,750,000 samples, 0.37%)</title><rect x="208.8" y="293" width="4.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="211.76" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (500,000 samples, 0.11%)</title><rect x="1065.9" y="69" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1068.86" y="79.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,250,000 samples, 0.48%)</title><rect x="186.8" y="261" width="5.7" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="189.81" y="271.5" ></text>
</g>
<g >
<title>rw_verify_area (1,250,000 samples, 0.27%)</title><rect x="1184.4" y="261" width="3.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1187.36" y="271.5" ></text>
</g>
<g >
<title>fpsimd_restore_current_state (250,000 samples, 0.05%)</title><rect x="1163.7" y="341" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1166.67" y="351.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (1,250,000 samples, 0.27%)</title><rect x="164.2" y="309" width="3.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="167.24" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_save (250,000 samples, 0.05%)</title><rect x="1188.7" y="309" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1191.75" y="319.5" ></text>
</g>
<g >
<title>percpu_ref_put_many.constprop.0 (750,000 samples, 0.16%)</title><rect x="321.0" y="245" width="1.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="323.99" y="255.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (8,000,000 samples, 1.70%)</title><rect x="1169.9" y="341" width="20.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1172.94" y="351.5" ></text>
</g>
<g >
<title>start_thread (397,750,000 samples, 84.54%)</title><rect x="192.5" y="453" width="997.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.45" y="463.5" >start_thread</text>
</g>
<g >
<title>fpsimd_load_state (750,000 samples, 0.16%)</title><rect x="173.0" y="325" width="1.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="176.02" y="335.5" ></text>
</g>
<g >
<title>mtree_range_walk (1,000,000 samples, 0.21%)</title><rect x="327.3" y="245" width="2.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="330.26" y="255.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1,250,000 samples, 0.27%)</title><rect x="337.3" y="213" width="3.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="340.29" y="223.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2,000,000 samples, 0.43%)</title><rect x="335.4" y="229" width="5.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="338.41" y="239.5" ></text>
</g>
<g >
<title>__arm64_sys_read (3,500,000 samples, 0.74%)</title><rect x="1180.0" y="309" width="8.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1182.97" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (500,000 samples, 0.11%)</title><rect x="317.2" y="229" width="1.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="320.23" y="239.5" ></text>
</g>
<g >
<title>do_translation_fault (56,500,000 samples, 12.01%)</title><rect x="25.7" y="341" width="141.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="28.67" y="351.5" >do_translation_fault</text>
</g>
<g >
<title>tomoyo_path_number_perm (500,000 samples, 0.11%)</title><rect x="211.9" y="277" width="1.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="214.89" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4,250,000 samples, 0.90%)</title><rect x="1067.1" y="213" width="10.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1070.11" y="223.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2,000,000 samples, 0.43%)</title><rect x="335.4" y="245" width="5.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="338.41" y="255.5" ></text>
</g>
<g >
<title>fpsimd_restore_current_state (750,000 samples, 0.16%)</title><rect x="1084.0" y="341" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1087.04" y="351.5" ></text>
</g>
<g >
<title>put_cpu_fpsimd_context (250,000 samples, 0.05%)</title><rect x="174.9" y="325" width="0.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="177.90" y="335.5" ></text>
</g>
<g >
<title>__wake_up (27,750,000 samples, 5.90%)</title><rect x="35.1" y="261" width="69.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="38.08" y="271.5" >__wake_up</text>
</g>
<g >
<title>free_unref_page_commit (1,750,000 samples, 0.37%)</title><rect x="188.1" y="197" width="4.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="191.07" y="207.5" ></text>
</g>
<g >
<title>invoke_syscall (5,750,000 samples, 1.22%)</title><rect x="1175.6" y="325" width="14.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1178.58" y="335.5" ></text>
</g>
<g >
<title>down_read (750,000 samples, 0.16%)</title><rect x="306.6" y="277" width="1.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="309.57" y="287.5" ></text>
</g>
<g >
<title>main (68,500,000 samples, 14.56%)</title><rect x="10.6" y="421" width="171.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.63" y="431.5" >main</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (500,000 samples, 0.11%)</title><rect x="336.0" y="197" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="339.04" y="207.5" ></text>
</g>
<g >
<title>schedule (18,500,000 samples, 3.93%)</title><rect x="1086.5" y="341" width="46.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1089.55" y="351.5" >sche..</text>
</g>
<g >
<title>userfaultfd_ctx_put (500,000 samples, 0.11%)</title><rect x="163.0" y="277" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="165.99" y="287.5" ></text>
</g>
<g >
<title>do_exit (4,000,000 samples, 0.85%)</title><rect x="182.4" y="373" width="10.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="185.42" y="383.5" ></text>
</g>
<g >
<title>alloc_pages (250,000 samples, 0.05%)</title><rect x="322.9" y="245" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="325.87" y="255.5" ></text>
</g>
<g >
<title>el0t_64_sync (4,000,000 samples, 0.85%)</title><rect x="182.4" y="469" width="10.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="185.42" y="479.5" ></text>
</g>
<g >
<title>el1_interrupt (250,000 samples, 0.05%)</title><rect x="1160.5" y="165" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1163.53" y="175.5" ></text>
</g>
<g >
<title>do_page_fault (2,000,000 samples, 0.43%)</title><rect x="177.4" y="309" width="5.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="180.41" y="319.5" ></text>
</g>
<g >
<title>__arm64_sys_ppoll (3,750,000 samples, 0.80%)</title><rect x="1153.6" y="309" width="9.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1156.63" y="319.5" ></text>
</g>
<g >
<title>el0t_64_sync (8,000,000 samples, 1.70%)</title><rect x="1169.9" y="405" width="20.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1172.94" y="415.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (372,000,000 samples, 79.06%)</title><rect x="200.0" y="389" width="932.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="202.98" y="399.5" >el0t_64_sync_handler</text>
</g>
<g >
<title>mtree_range_walk (500,000 samples, 0.11%)</title><rect x="166.1" y="277" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="169.12" y="287.5" ></text>
</g>
<g >
<title>userfaultfd_ioctl (346,500,000 samples, 73.65%)</title><rect x="213.8" y="293" width="869.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="216.77" y="303.5" >userfaultfd_ioctl</text>
</g>
<g >
<title>el0t_64_sync (250,000 samples, 0.05%)</title><rect x="176.8" y="357" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="179.78" y="367.5" ></text>
</g>
<g >
<title>irq_exit_rcu (250,000 samples, 0.05%)</title><rect x="1160.5" y="149" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1163.53" y="159.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (750,000 samples, 0.16%)</title><rect x="1144.2" y="405" width="1.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1147.23" y="415.5" ></text>
</g>
<g >
<title>_dl_fixup (250,000 samples, 0.05%)</title><rect x="10.0" y="405" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>unmap_vmas (4,000,000 samples, 0.85%)</title><rect x="182.4" y="309" width="10.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="185.42" y="319.5" ></text>
</g>
<g >
<title>do_group_exit (4,000,000 samples, 0.85%)</title><rect x="182.4" y="389" width="10.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="185.42" y="399.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (250,000 samples, 0.05%)</title><rect x="329.8" y="261" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="332.77" y="271.5" ></text>
</g>
<g >
<title>all (470,500,000 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>el1h_64_irq (500,000 samples, 0.11%)</title><rect x="1065.9" y="197" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1068.86" y="207.5" ></text>
</g>
<g >
<title>page_remove_rmap (1,500,000 samples, 0.32%)</title><rect x="183.0" y="277" width="3.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="186.05" y="287.5" ></text>
</g>
<g >
<title>release_pages (2,250,000 samples, 0.48%)</title><rect x="186.8" y="229" width="5.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="189.81" y="239.5" ></text>
</g>
<g >
<title>__pi_clear_page (250,000 samples, 0.05%)</title><rect x="322.9" y="213" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="325.87" y="223.5" ></text>
</g>
<g >
<title>arch_local_irq_disable (250,000 samples, 0.05%)</title><rect x="316.6" y="229" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="319.60" y="239.5" ></text>
</g>
<g >
<title>get_random_u16 (250,000 samples, 0.05%)</title><rect x="1163.0" y="309" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1166.04" y="319.5" ></text>
</g>
<g >
<title>poll_freewait (250,000 samples, 0.05%)</title><rect x="1156.8" y="277" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1159.77" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (2,000,000 samples, 0.43%)</title><rect x="177.4" y="213" width="5.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="180.41" y="223.5" ></text>
</g>
<g >
<title>pthread_create@@GLIBC_2.34 (2,250,000 samples, 0.48%)</title><rect x="176.8" y="405" width="5.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="179.78" y="415.5" ></text>
</g>
<g >
<title>__arch_copy_from_user (250,000 samples, 0.05%)</title><rect x="205.6" y="293" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="208.62" y="303.5" ></text>
</g>
<g >
<title>mt_find (1,000,000 samples, 0.21%)</title><rect x="324.8" y="245" width="2.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="327.75" y="255.5" ></text>
</g>
<g >
<title>el1_interrupt (500,000 samples, 0.11%)</title><rect x="1065.9" y="165" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1068.86" y="175.5" ></text>
</g>
<g >
<title>tomoyo_path_number_perm (500,000 samples, 0.11%)</title><rect x="210.6" y="261" width="1.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="213.64" y="271.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2,250,000 samples, 0.48%)</title><rect x="186.8" y="277" width="5.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="189.81" y="287.5" ></text>
</g>
<g >
<title>schedule (23,000,000 samples, 4.89%)</title><rect x="104.7" y="261" width="57.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.68" y="271.5" >schedule</text>
</g>
<g >
<title>__alloc_pages (292,500,000 samples, 62.17%)</title><rect x="344.2" y="229" width="733.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="347.19" y="239.5" >__alloc_pages</text>
</g>
<g >
<title>__folio_alloc (500,000 samples, 0.11%)</title><rect x="313.5" y="261" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="316.46" y="271.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (500,000 samples, 0.11%)</title><rect x="319.7" y="245" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="322.73" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (250,000 samples, 0.05%)</title><rect x="322.9" y="229" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="325.87" y="239.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (3,000,000 samples, 0.64%)</title><rect x="154.8" y="229" width="7.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="157.84" y="239.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (500,000 samples, 0.11%)</title><rect x="336.0" y="213" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="339.04" y="223.5" ></text>
</g>
<g >
<title>mcopy_atomic (306,750,000 samples, 65.20%)</title><rect x="308.4" y="277" width="769.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="311.45" y="287.5" >mcopy_atomic</text>
</g>
<g >
<title>__kern_my_cpu_offset (250,000 samples, 0.05%)</title><rect x="183.0" y="229" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="186.05" y="239.5" ></text>
</g>
<g >
<title>kernel_clone (250,000 samples, 0.05%)</title><rect x="176.8" y="229" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="179.78" y="239.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (6,750,000 samples, 1.43%)</title><rect x="1147.4" y="389" width="16.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1150.36" y="399.5" ></text>
</g>
<g >
<title>el0_svc (372,000,000 samples, 79.06%)</title><rect x="200.0" y="373" width="932.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="202.98" y="383.5" >el0_svc</text>
</g>
<g >
<title>vfs_read (2,250,000 samples, 0.48%)</title><rect x="1183.1" y="277" width="5.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1186.10" y="287.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (250,000 samples, 0.05%)</title><rect x="330.4" y="245" width="0.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="333.39" y="255.5" ></text>
</g>
<g >
<title>__pollwait (500,000 samples, 0.11%)</title><rect x="1161.2" y="261" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1164.16" y="271.5" ></text>
</g>
<g >
<title>__pi_clear_page (287,500,000 samples, 61.11%)</title><rect x="346.1" y="213" width="721.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="349.07" y="223.5" >__pi_clear_page</text>
</g>
<g >
<title>do_el0_svc (8,000,000 samples, 1.70%)</title><rect x="1169.9" y="357" width="20.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1172.94" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,000,000 samples, 0.43%)</title><rect x="177.4" y="293" width="5.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="180.41" y="303.5" ></text>
</g>
<g >
<title>folio_add_lru (250,000 samples, 0.05%)</title><rect x="331.0" y="229" width="0.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="334.02" y="239.5" ></text>
</g>
<g >
<title>el1h_64_irq (250,000 samples, 0.05%)</title><rect x="1160.5" y="197" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1163.53" y="207.5" ></text>
</g>
<g >
<title>free_unref_page_list (1,750,000 samples, 0.37%)</title><rect x="188.1" y="213" width="4.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="191.07" y="223.5" ></text>
</g>
<g >
<title>userfaultfd_poll (500,000 samples, 0.11%)</title><rect x="1161.2" y="277" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1164.16" y="287.5" ></text>
</g>
<g >
<title>__poll (9,250,000 samples, 1.97%)</title><rect x="1141.1" y="421" width="23.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1144.09" y="431.5" >_..</text>
</g>
<g >
<title>__do_sys_clone (250,000 samples, 0.05%)</title><rect x="176.8" y="245" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="179.78" y="255.5" ></text>
</g>
<g >
<title>el0_svc (250,000 samples, 0.05%)</title><rect x="176.8" y="325" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="179.78" y="335.5" ></text>
</g>
<g >
<title>fpsimd_load_state (250,000 samples, 0.05%)</title><rect x="1163.7" y="325" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1166.67" y="335.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (3,000,000 samples, 0.64%)</title><rect x="315.3" y="261" width="7.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="318.35" y="271.5" ></text>
</g>
<g >
<title>rcu_core (250,000 samples, 0.05%)</title><rect x="1066.5" y="37" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1069.48" y="47.5" ></text>
</g>
<g >
<title>do_mem_abort (56,750,000 samples, 12.06%)</title><rect x="25.0" y="357" width="142.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="28.05" y="367.5" >do_mem_abort</text>
</g>
<g >
<title>_dl_runtime_resolve (250,000 samples, 0.05%)</title><rect x="10.0" y="421" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__get_vma_policy (250,000 samples, 0.05%)</title><rect x="314.7" y="261" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="317.72" y="271.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1,500,000 samples, 0.32%)</title><rect x="1157.4" y="277" width="3.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1160.40" y="287.5" ></text>
</g>
<g >
<title>el0_svc (8,000,000 samples, 1.70%)</title><rect x="1169.9" y="373" width="20.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1172.94" y="383.5" ></text>
</g>
<g >
<title>do_notify_resume (250,000 samples, 0.05%)</title><rect x="1163.7" y="357" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1166.67" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (250,000 samples, 0.05%)</title><rect x="1160.5" y="69" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1163.53" y="79.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (8,000,000 samples, 1.70%)</title><rect x="1169.9" y="389" width="20.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1172.94" y="399.5" ></text>
</g>
<g >
<title>_start (68,750,000 samples, 14.61%)</title><rect x="10.0" y="469" width="172.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >_start</text>
</g>
<g >
<title>call_on_irq_stack (250,000 samples, 0.05%)</title><rect x="1160.5" y="101" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1163.53" y="111.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (750,000 samples, 0.16%)</title><rect x="183.0" y="245" width="1.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="186.05" y="255.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,000,000 samples, 0.43%)</title><rect x="177.4" y="245" width="5.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="180.41" y="255.5" ></text>
</g>
<g >
<title>do_notify_resume (20,000,000 samples, 4.25%)</title><rect x="1082.8" y="357" width="50.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1085.78" y="367.5" >do_no..</text>
</g>
<g >
<title>memset (750,000 samples, 0.16%)</title><rect x="208.8" y="261" width="1.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="211.76" y="271.5" ></text>
</g>
<g >
<title>fpsimd_load_state (750,000 samples, 0.16%)</title><rect x="1084.0" y="325" width="1.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1087.04" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (500,000 samples, 0.11%)</title><rect x="1065.9" y="149" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1068.86" y="159.5" ></text>
</g>
<g >
<title>aa_file_perm (250,000 samples, 0.05%)</title><rect x="1186.9" y="213" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1189.87" y="223.5" ></text>
</g>
<g >
<title>__arm64_sys_clone (250,000 samples, 0.05%)</title><rect x="176.8" y="261" width="0.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="179.78" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,000,000 samples, 0.43%)</title><rect x="177.4" y="277" width="5.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="180.41" y="287.5" ></text>
</g>
<g >
<title>security_file_permission (1,000,000 samples, 0.21%)</title><rect x="1185.0" y="245" width="2.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1187.98" y="255.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (500,000 samples, 0.11%)</title><rect x="1065.9" y="181" width="1.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1068.86" y="191.5" ></text>
</g>
<g >
<title>__fget_light (750,000 samples, 0.16%)</title><rect x="1181.2" y="261" width="1.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1184.22" y="271.5" ></text>
</g>
<g >
<title>schedule (1,500,000 samples, 0.32%)</title><rect x="1157.4" y="245" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1160.40" y="255.5" ></text>
</g>
<g >
<title>__libc_start_call_main (68,750,000 samples, 14.61%)</title><rect x="10.0" y="437" width="172.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >__libc_start_call_main</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (352,000,000 samples, 74.81%)</title><rect x="200.0" y="341" width="882.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="202.98" y="351.5" >el0_svc_common.constprop.0</text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (68,750,000 samples, 14.61%)</title><rect x="10.0" y="453" width="172.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >__libc_start_main@@GLI..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (500,000 samples, 0.11%)</title><rect x="183.7" y="229" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="186.68" y="239.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (250,000 samples, 0.05%)</title><rect x="176.8" y="293" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="179.78" y="303.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (500,000 samples, 0.11%)</title><rect x="1065.9" y="117" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1068.86" y="127.5" ></text>
</g>
<g >
<title>____do_softirq (500,000 samples, 0.11%)</title><rect x="1065.9" y="85" width="1.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1068.86" y="95.5" ></text>
</g>
<g >
<title>policy_node (250,000 samples, 0.05%)</title><rect x="341.7" y="261" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="344.68" y="271.5" ></text>
</g>
<g >
<title>el0_svc (6,750,000 samples, 1.43%)</title><rect x="1147.4" y="373" width="16.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1150.36" y="383.5" ></text>
</g>
<g >
<title>handle_userfault (51,250,000 samples, 10.89%)</title><rect x="33.8" y="277" width="128.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.83" y="287.5" >handle_userfault</text>
</g>
<g >
<title>try_charge_memcg (500,000 samples, 0.11%)</title><rect x="318.5" y="229" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="321.48" y="239.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (250,000 samples, 0.05%)</title><rect x="207.5" y="293" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="210.50" y="303.5" ></text>
</g>
<g >
<title>memset (250,000 samples, 0.05%)</title><rect x="1162.4" y="293" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1165.41" y="303.5" ></text>
</g>
<g >
<title>do_notify_resume (3,750,000 samples, 0.80%)</title><rect x="167.4" y="357" width="9.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="170.38" y="367.5" ></text>
</g>
<g >
<title>invoke_syscall (250,000 samples, 0.05%)</title><rect x="176.8" y="277" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="179.78" y="287.5" ></text>
</g>
<g >
<title>el0_da (64,250,000 samples, 13.66%)</title><rect x="15.6" y="373" width="161.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="18.64" y="383.5" >el0_da</text>
</g>
<g >
<title>__arm64_sys_ioctl (349,750,000 samples, 74.34%)</title><rect x="205.6" y="309" width="877.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="208.62" y="319.5" >__arm64_sys_ioctl</text>
</g>
<g >
<title>tomoyo_init_request_info (500,000 samples, 0.11%)</title><rect x="210.6" y="245" width="1.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="213.64" y="255.5" ></text>
</g>
<g >
<title>get_random_u16 (250,000 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.37" y="319.5" ></text>
</g>
<g >
<title>mmput (500,000 samples, 0.11%)</title><rect x="1077.8" y="277" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1080.77" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (54,000,000 samples, 11.48%)</title><rect x="28.8" y="309" width="135.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="31.81" y="319.5" >handle_mm_fault</text>
</g>
<g >
<title>vma_is_shmem (250,000 samples, 0.05%)</title><rect x="1082.2" y="277" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1085.16" y="287.5" ></text>
</g>
<g >
<title>invoke_syscall (5,000,000 samples, 1.06%)</title><rect x="1151.1" y="325" width="12.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1154.13" y="335.5" ></text>
</g>
<g >
<title>____do_softirq (250,000 samples, 0.05%)</title><rect x="1160.5" y="85" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1163.53" y="95.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (250,000 samples, 0.05%)</title><rect x="1160.5" y="133" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1163.53" y="143.5" ></text>
</g>
<g >
<title>do_notify_resume (4,000,000 samples, 0.85%)</title><rect x="182.4" y="421" width="10.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="185.42" y="431.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (1,500,000 samples, 0.32%)</title><rect x="331.6" y="197" width="3.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="334.65" y="207.5" ></text>
</g>
<g >
<title>create_thread (250,000 samples, 0.05%)</title><rect x="176.8" y="389" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="179.78" y="399.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,000,000 samples, 0.43%)</title><rect x="177.4" y="373" width="5.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="180.41" y="383.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (250,000 samples, 0.05%)</title><rect x="1160.5" y="181" width="0.7" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1163.53" y="191.5" ></text>
</g>
<g >
<title>__cond_resched (500,000 samples, 0.11%)</title><rect x="1077.8" y="261" width="1.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1080.77" y="271.5" ></text>
</g>
<g >
<title>rcu_all_qs (500,000 samples, 0.11%)</title><rect x="1077.8" y="245" width="1.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1080.77" y="255.5" ></text>
</g>
<g >
<title>__fdget_pos (750,000 samples, 0.16%)</title><rect x="1181.2" y="277" width="1.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1184.22" y="287.5" ></text>
</g>
<g >
<title>tomoyo_file_ioctl (1,250,000 samples, 0.27%)</title><rect x="208.8" y="277" width="3.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="211.76" y="287.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1,500,000 samples, 0.32%)</title><rect x="1157.4" y="261" width="3.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1160.40" y="271.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (250,000 samples, 0.05%)</title><rect x="1132.3" y="309" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.32" y="319.5" ></text>
</g>
<g >
<title>userfaultfd-dem (470,500,000 samples, 100.00%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >userfaultfd-dem</text>
</g>
<g >
<title>do_el0_svc (6,500,000 samples, 1.38%)</title><rect x="1147.4" y="357" width="16.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1150.36" y="367.5" ></text>
</g>
<g >
<title>__list_add_valid (250,000 samples, 0.05%)</title><rect x="191.8" y="181" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="194.83" y="191.5" ></text>
</g>
<g >
<title>do_el0_svc (352,000,000 samples, 74.81%)</title><rect x="200.0" y="357" width="882.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="202.98" y="367.5" >do_el0_svc</text>
</g>
<g >
<title>finish_task_switch.isra.0 (250,000 samples, 0.05%)</title><rect x="1160.5" y="213" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.53" y="223.5" ></text>
</g>
<g >
<title>userfaultfd_read (500,000 samples, 0.11%)</title><rect x="1187.5" y="261" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1190.49" y="271.5" ></text>
</g>
<g >
<title>el0_svc (4,000,000 samples, 0.85%)</title><rect x="182.4" y="437" width="10.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="185.42" y="447.5" ></text>
</g>
<g >
<title>__fdget (750,000 samples, 0.16%)</title><rect x="1154.9" y="277" width="1.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1157.89" y="287.5" ></text>
</g>
<g >
<title>invoke_syscall (350,250,000 samples, 74.44%)</title><rect x="204.4" y="325" width="878.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="207.37" y="335.5" >invoke_syscall</text>
</g>
<g >
<title>__GI___memset_generic (3,250,000 samples, 0.69%)</title><rect x="1132.9" y="421" width="8.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1135.94" y="431.5" ></text>
</g>
<g >
<title>__pte_alloc (250,000 samples, 0.05%)</title><rect x="322.9" y="261" width="0.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="325.87" y="271.5" ></text>
</g>
<g >
<title>tomoyo_file_ioctl (250,000 samples, 0.05%)</title><rect x="213.1" y="293" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="216.15" y="303.5" ></text>
</g>
<g >
<title>memset (250,000 samples, 0.05%)</title><rect x="10.0" y="389" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>mfill_atomic_install_pte (4,000,000 samples, 0.85%)</title><rect x="330.4" y="261" width="10.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="333.39" y="271.5" ></text>
</g>
<g >
<title>__pi_clear_page (2,000,000 samples, 0.43%)</title><rect x="177.4" y="197" width="5.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="180.41" y="207.5" ></text>
</g>
<g >
<title>ksys_read (3,250,000 samples, 0.69%)</title><rect x="1180.6" y="293" width="8.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1183.60" y="303.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,250,000 samples, 0.27%)</title><rect x="1079.0" y="277" width="3.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1082.02" y="287.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (250,000 samples, 0.05%)</title><rect x="172.4" y="341" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="175.39" y="351.5" ></text>
</g>
<g >
<title>__schedule (1,500,000 samples, 0.32%)</title><rect x="1157.4" y="229" width="3.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1160.40" y="239.5" ></text>
</g>
<g >
<title>__mmput (4,000,000 samples, 0.85%)</title><rect x="182.4" y="341" width="10.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="185.42" y="351.5" ></text>
</g>
<g >
<title>__fdget (500,000 samples, 0.11%)</title><rect x="206.2" y="293" width="1.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="209.25" y="303.5" ></text>
</g>
<g >
<title>down_read_trylock (250,000 samples, 0.05%)</title><rect x="28.2" y="309" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="31.18" y="319.5" ></text>
</g>
<g >
<title>do_mem_abort (2,000,000 samples, 0.43%)</title><rect x="177.4" y="341" width="5.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="180.41" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (500,000 samples, 0.11%)</title><rect x="1146.1" y="405" width="1.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1149.11" y="415.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (250,000 samples, 0.05%)</title><rect x="174.9" y="309" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="177.90" y="319.5" ></text>
</g>
<g >
<title>__fget_light (500,000 samples, 0.11%)</title><rect x="206.2" y="277" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="209.25" y="287.5" ></text>
</g>
<g >
<title>__arch_copy_from_user (6,750,000 samples, 1.43%)</title><rect x="289.6" y="277" width="17.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="292.64" y="287.5" ></text>
</g>
<g >
<title>el0t_64_sync (64,250,000 samples, 13.66%)</title><rect x="15.6" y="405" width="161.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="18.64" y="415.5" >el0t_64_sync</text>
</g>
<g >
<title>read (10,250,000 samples, 2.18%)</title><rect x="1164.3" y="421" width="25.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1167.29" y="431.5" >r..</text>
</g>
<g >
<title>rmqueue_bulk (4,000,000 samples, 0.85%)</title><rect x="1067.7" y="197" width="10.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1070.74" y="207.5" ></text>
</g>
<g >
<title>el0_da (2,000,000 samples, 0.43%)</title><rect x="177.4" y="357" width="5.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="180.41" y="367.5" ></text>
</g>
<g >
<title>memset (250,000 samples, 0.05%)</title><rect x="162.4" y="277" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="165.36" y="287.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (2,000,000 samples, 0.43%)</title><rect x="177.4" y="261" width="5.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="180.41" y="271.5" ></text>
</g>
<g >
<title>__GI___ioctl (373,750,000 samples, 79.44%)</title><rect x="195.6" y="421" width="937.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="198.59" y="431.5" >__GI___ioctl</text>
</g>
<g >
<title>__fget_light (750,000 samples, 0.16%)</title><rect x="1154.9" y="261" width="1.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1157.89" y="271.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (250,000 samples, 0.05%)</title><rect x="1184.4" y="245" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1187.36" y="255.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (500,000 samples, 0.11%)</title><rect x="1065.9" y="133" width="1.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1068.86" y="143.5" ></text>
</g>
<g >
<title>el0t_64_sync (6,750,000 samples, 1.43%)</title><rect x="1147.4" y="405" width="16.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1150.36" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (56,500,000 samples, 12.01%)</title><rect x="25.7" y="325" width="141.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="28.67" y="335.5" >do_page_fault</text>
</g>
<g >
<title>__arch_copy_to_user (500,000 samples, 0.11%)</title><rect x="1183.1" y="261" width="1.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1186.10" y="271.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,000,000 samples, 0.43%)</title><rect x="177.4" y="389" width="5.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="180.41" y="399.5" ></text>
</g>
<g >
<title>rcu_core_si (250,000 samples, 0.05%)</title><rect x="1066.5" y="53" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1069.48" y="63.5" ></text>
</g>
<g >
<title>__schedule (22,250,000 samples, 4.73%)</title><rect x="106.6" y="245" width="55.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="109.56" y="255.5" >__sch..</text>
</g>
<g >
<title>get_random_u16 (250,000 samples, 0.05%)</title><rect x="203.7" y="325" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="206.74" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (250,000 samples, 0.05%)</title><rect x="1168.7" y="405" width="0.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1171.68" y="415.5" ></text>
</g>
<g >
<title>find_vma (2,500,000 samples, 0.53%)</title><rect x="323.5" y="261" width="6.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="326.50" y="271.5" ></text>
</g>
<g >
<title>fpsimd_restore_current_state (1,250,000 samples, 0.27%)</title><rect x="173.0" y="341" width="3.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="176.02" y="351.5" ></text>
</g>
<g >
<title>charge_memcg (1,250,000 samples, 0.27%)</title><rect x="316.6" y="245" width="3.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="319.60" y="255.5" ></text>
</g>
<g >
<title>mcopy_atomic (250,000 samples, 0.05%)</title><rect x="208.1" y="293" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="211.13" y="303.5" ></text>
</g>
<g >
<title>find_vma (750,000 samples, 0.16%)</title><rect x="165.5" y="293" width="1.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="168.49" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (500,000 samples, 0.11%)</title><rect x="1186.2" y="229" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1189.24" y="239.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (4,000,000 samples, 0.85%)</title><rect x="182.4" y="453" width="10.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="185.42" y="463.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (64,250,000 samples, 13.66%)</title><rect x="15.6" y="389" width="161.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="18.64" y="399.5" >el0t_64_sync_handler</text>
</g>
<g >
<title>free_pages_and_swap_cache (2,250,000 samples, 0.48%)</title><rect x="186.8" y="245" width="5.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="189.81" y="255.5" ></text>
</g>
<g >
<title>__schedule (18,500,000 samples, 3.93%)</title><rect x="1086.5" y="325" width="46.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1089.55" y="335.5" >__sc..</text>
</g>
<g >
<title>mm_trace_rss_stat (250,000 samples, 0.05%)</title><rect x="341.1" y="261" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="344.05" y="271.5" ></text>
</g>
<g >
<title>el0t_64_sync (372,000,000 samples, 79.06%)</title><rect x="200.0" y="405" width="932.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="202.98" y="415.5" >el0t_64_sync</text>
</g>
<g >
<title>mm_alloc_pmd (250,000 samples, 0.05%)</title><rect x="340.4" y="261" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="343.43" y="271.5" ></text>
</g>
<g >
<title>do_translation_fault (2,000,000 samples, 0.43%)</title><rect x="177.4" y="325" width="5.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="180.41" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (52,000,000 samples, 11.05%)</title><rect x="33.8" y="293" width="130.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="36.83" y="303.5" >__handle_mm_fault</text>
</g>
<g >
<title>release_pages (1,000,000 samples, 0.21%)</title><rect x="332.9" y="181" width="2.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="335.90" y="191.5" ></text>
</g>
<g >
<title>rwsem_read_trylock (500,000 samples, 0.11%)</title><rect x="342.3" y="261" width="1.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="345.31" y="271.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1,500,000 samples, 0.32%)</title><rect x="183.0" y="261" width="3.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="186.05" y="271.5" ></text>
</g>
<g >
<title>exit_mmap (4,000,000 samples, 0.85%)</title><rect x="182.4" y="325" width="10.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="185.42" y="335.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (27,750,000 samples, 5.90%)</title><rect x="35.1" y="245" width="69.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="38.08" y="255.5" >__wake_..</text>
</g>
<g >
<title>__aarch64_cas4_acq (250,000 samples, 0.05%)</title><rect x="1145.5" y="389" width="0.6" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1148.48" y="399.5" ></text>
</g>
<g >
<title>unmap_page_range (4,000,000 samples, 0.85%)</title><rect x="182.4" y="293" width="10.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="185.42" y="303.5" ></text>
</g>
<g >
<title>do_sys_poll (3,500,000 samples, 0.74%)</title><rect x="1153.6" y="293" width="8.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1156.63" y="303.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1,500,000 samples, 0.32%)</title><rect x="331.6" y="229" width="3.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="334.65" y="239.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (250,000 samples, 0.05%)</title><rect x="1160.5" y="117" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1163.53" y="127.5" ></text>
</g>
<g >
<title>mmput (4,000,000 samples, 0.85%)</title><rect x="182.4" y="357" width="10.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="185.42" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (250,000 samples, 0.05%)</title><rect x="176.2" y="341" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="179.15" y="351.5" ></text>
</g>
<g >
<title>task_fpsimd_load (250,000 samples, 0.05%)</title><rect x="175.5" y="325" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="178.53" y="335.5" ></text>
</g>
<g >
<title>fault_handler_thread (397,750,000 samples, 84.54%)</title><rect x="192.5" y="437" width="997.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="195.45" y="447.5" >fault_handler_thread</text>
</g>
<g >
<title>vma_alloc_folio (292,750,000 samples, 62.22%)</title><rect x="343.6" y="261" width="734.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="346.56" y="271.5" >vma_alloc_folio</text>
</g>
<g >
<title>__alloc_pages (250,000 samples, 0.05%)</title><rect x="343.6" y="245" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="346.56" y="255.5" ></text>
</g>
<g >
<title>get_signal (4,000,000 samples, 0.85%)</title><rect x="182.4" y="405" width="10.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="185.42" y="415.5" ></text>
</g>
<g >
<title>__mod_node_page_state (750,000 samples, 0.16%)</title><rect x="184.9" y="245" width="1.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="187.93" y="255.5" ></text>
</g>
<g >
<title>__schedule (250,000 samples, 0.05%)</title><rect x="34.5" y="261" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="37.45" y="271.5" ></text>
</g>
<g >
<title>get_cpu_fpsimd_context (250,000 samples, 0.05%)</title><rect x="1085.9" y="341" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1088.92" y="351.5" ></text>
</g>
<g >
<title>call_on_irq_stack (500,000 samples, 0.11%)</title><rect x="1065.9" y="101" width="1.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1068.86" y="111.5" ></text>
</g>
<g >
<title>folio_add_lru (1,500,000 samples, 0.32%)</title><rect x="331.6" y="213" width="3.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="334.65" y="223.5" ></text>
</g>
<g >
<title>__folio_alloc (2,000,000 samples, 0.43%)</title><rect x="177.4" y="229" width="5.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="180.41" y="239.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (6,500,000 samples, 1.38%)</title><rect x="1147.4" y="341" width="16.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1150.36" y="351.5" ></text>
</g>
<g >
<title>__clone (250,000 samples, 0.05%)</title><rect x="176.8" y="373" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="179.78" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (250,000 samples, 0.05%)</title><rect x="1169.3" y="405" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1172.31" y="415.5" ></text>
</g>
</g>
</svg>
